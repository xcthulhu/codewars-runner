# BUILD-USING:    docker build -t codewars/runner-julia .
# TEST-USING:     docker run --rm -i -t --name=test-runner-julia --entrypoint=/bin/bash codewars/runner-julia -s
# RUN-USING:      docker run --rm --name=runner-julia codewars/runner-julia --help

# Pull base image.
FROM codewars/runner-base

# Install Julia
# Julia is really slow, but v0.3 is okay (see http://stackoverflow.com/a/20566032)
# In the future, don't use nightly builds, use releases
RUN add-apt-repository ppa:staticfloat/julianightlies
RUN add-apt-repository ppa:staticfloat/julia-deps
RUN apt-get update
RUN apt-get -y install julia
# Nightly builds have a noisy OpenBLAS error, workaround
RUN mv /usr/bin/julia /usr/bin/julia-noisy
RUN printf '#!/bin/bash\njulia-noisy "$@" 2> >(grep -v "OpenBLAS : Your OS does not support AVX instructions." 1>&2)' > /usr/bin/julia
RUN chmod a+x /usr/bin/julia

# Install erlang
RUN echo "deb http://packages.erlang-solutions.com/ubuntu trusty contrib" >> /etc/apt/sources.list
RUN curl http://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc | apt-key add -
RUN apt-get update
RUN apt-get -y install erlang-nox erlang-dev

# Install PHP
RUN apt-get -y install php-pear php5-dev libcurl3-openssl-dev


# Install GoLang
WORKDIR /tmp
# http://blog.labix.org/2013/06/15/in-flight-deb-packages-of-go
# This was cool but then it stopped working... that sucks... ~Matt
RUN curl https://godeb.s3.amazonaws.com/godeb-amd64.tar.gz | tar zxv
RUN ./godeb install 1.3.1
RUN rm godeb
#RUN apt-get install -y golang

# Install Rust 0.11
# Workaround since the author of this PPA is Scandanavian, with a unicode name, and the tools hate this
RUN add-apt-repository "deb http://ppa.launchpad.net/hansjorg/rust/ubuntu trusty main"
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BD6B6386
RUN apt-get update
RUN apt-get -y install rust-0.11

# Install Lua
RUN apt-get install -y lua5.2
RUN apt-get install -y luarocks

# Install Prolog
#RUN apt-add-repository ppa:swi-prolog/stable && apt-get update
#RUN apt-get install -y swi-prolog

# Install ZMQ
#RUN luarocks install https://raw.github.com/Neopallium/lua-zmq/master/rockspecs/lua-zmq-scm-1.rockspec
RUN pecl install zmq-beta #php
RUN apt-get install -y libzeromq-perl #perl

# ADD cli-runner and install node deps
ADD . /codewars

WORKDIR /codewars
RUN npm install

# Run the test suite to make sure this thing works

USER codewarrior
# Set environment variables
ENV TIMEOUT 2000
ENV USER codewarrior
ENV HOME /home/codewarrior
RUN mocha -t 5000 test/runners/go_spec.js \
    test/runners/php_spec.js \
    test/runners/erlang_spec.js \
    test/runners/julia_spec.js \
    test/runners/rust_spec.js \
    test/runners/go_spec.js \
    test/runners/lua_spec.js \
    test/runners/perl_spec.js


#timeout is a fallback in case an error with node
#prevents it from exiting properly
ENTRYPOINT ["timeout", "15", "node"]
