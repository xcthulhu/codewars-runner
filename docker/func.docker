# BUILD-USING:    docker build -t codewars/runner-func .
# TEST-USING:     docker run --rm -i -t --name=test-runner-func --entrypoint=/bin/bash codewars/runner-haskell -s
# RUN-USING:      docker run --rm --name=runner-func codewars/runner-func --help

# Pull base image.
FROM localhost/base

# Install Racket
RUN apt-get -y install racket

# Install SBCL (Steel Bank Common Lisp)
RUN apt-get -y install sbcl

# Install OCAML
RUN apt-get -y install ocaml-nox

# Install Haskell
RUN add-apt-repository ppa:hvr/ghc
RUN apt-get update
RUN apt-get install -y ghc cabal-install
RUN su codewarrior -c "cd ; cabal update"
RUN su codewarrior -c "cd ; cabal install cabal"
RUN su codewarrior -c "echo 'remote-repo: stackage:http://www.stackage.org/stackage/604a3649795771f6dd8b80bfd4eeb748e1d97599' >> ~/.cabal/config"
RUN su codewarrior -c "cd ; cabal update"
RUN su codewarrior -c "cd ; cabal install cabal"

# Install Haskell Packages
RUN apt-get -y install libghc-zlib-dev pkg-config happy
RUN su codewarrior -c "cd ; cabal install hspec-1.12.1 esqueleto persistent-sqlite persistent-template zeromq4-haskell haskell-src-exts lens"

# ADD cli-runner and install node deps
ADD . /codewars

WORKDIR /codewars
RUN npm install

# Run the test suite to make sure this thing works

USER codewarrior
# Set environment variables
ENV USER codewarrior
ENV HOME /home/codewarrior
RUN mocha -t 5000 test/runners/{haskell,ocaml,lisp,racket}_spec.js

#timeout is a fallback in case an error with node
#prevents it from exiting properly
ENTRYPOINT ["timeout", "15", "node"]
